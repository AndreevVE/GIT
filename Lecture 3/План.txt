1. ВСПОМНИМ О ЧЕМ ГОВОРИЛИ НА ПРОШЛОМ ЗАНЯТИИ

	* ПОСМОТРИМ КАК РАБОТАТЬ С GIT ЛОКАЛЬНО. 
	Создаем файл joe song.txt , вставляю две строки, git add song.txt,  git status, git commin -m "New file", git status, git push
	смотрим github  - Это наш норамльный режим работы когда мы все делали правиль и не ошибались. Но так не бывает.
	* УЧИМСЯ ИСПРАВЛЯТЬ ОШИДКИ
	1. Добавим плохую строку song.txt and REDMY
	git checkout . (или один конкретный файл) - все изменения исчезли.
	git clean -x (игнорируем правила гитигнор) d- удалять все вложенные директории f- форсе (сила) иначе по умолчанию гит ни чего не делает.   Удаляет неотслеживаемые файлы.
	 git reset file . Сказать про разницу git reset  и  git restore  - Гит рестор появился в новых версиях начина с 2.23.0
	git reset HEAD       (gig rest --hard -удалит безвозвратно коми. ОПАСНО!)
	5. Мы успели выполнить git push на github.  И поняли что наш последний комит плохой. Что делать?
	git log - Ищим HEAD последнего коммита
	git revert HEAD - редактируем комментарии
	git push
	
	Другой способ
	git log - смотрим HEAD
	git reset HEAD 
	git push --force  
	
	* РАССМОТРИМ ФАЙЛ .GITIGNORE 
	* ПОЗНАКОМИМСЯ С ВЕТКАМИ 
	git branch test   (для переключения сразу git checkout -b test )
	git checkout test
	git log --oneline - HEAD указывает на один и тот же коммит
	Рассмотрим fast-forward merge. 
	изменяю файл только в ветке тест.
	
	Рассмотрим non fast-forward merge
	git merge test - У на возник конфликт. Давайте его разрешим. Откроем текст в редакторе примем решение
	git add song.txt; git commit -m "merge test"
	Мы смерджили две ветки 
	Удалим ненужную
	git branch -d test
	git log --oneline --decorate --graph --all
	git reset --merge ORIG_HEAD
	
	
2. ЧТО СЕГОДНЯ
 	ПУЛ РЕКВЕСТ. ПО ТЕКСТУ 
 	создам issue (проблема)
	GH-1 Create-new song  
	
	git checkout -b GH-1-Create-new-song
	joe new-song.txt
	git add new-song.txt
	git commit
	git push --set-upstreem orig GH-1-Create-new-song
	
	создать пул реквест
	
	смержить
	git checkout main
	git pull
	
	ОДИН РЕПОЗИТОРИЙ НА ВСЕ.
	Создадин на GITHUB новый репозиторий TEL-RAN-HomeWork
	сделакм git clone это репозитория к себе.
	Скопируем в него все наши каталоги с домашками
	удалим вних (если есть) .git
	git status - Видим список неотслеживаемых каталогов
	Добавим их - git add .
	И добавим их в индекс
	git commit -am "Add new project"
	теперь отправим их на гит хаб 
	git push
	Теперь управление всеми нашими работами идет из одного каталога и все в одном репозитории. с каждым проектом мы можем работать отдельно
	например
	зайдем в один из каталогов и что то поменяем
	git status - покажет что в таком то каталоге изменился файл
	git add
	git commit -m
	git pull
	Вы можете скопировать ссылку на нужный каталог в гитхабе и отправить ее преподавателю
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
